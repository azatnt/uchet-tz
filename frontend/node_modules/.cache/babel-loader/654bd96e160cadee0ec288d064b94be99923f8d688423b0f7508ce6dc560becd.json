{"ast":null,"code":"var _jsxFileName = \"/Users/azatamanzol/PycharmProjects/uchet/frontend/src/App.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  async function uploadFile() {\n    const fileInput = document.querySelector('input[type=\"file\"]');\n    const files = fileInput.files;\n    const filename = files[0].name;\n    const formdata = new FormData();\n    formdata.append('filename', filename);\n    let uploadId;\n    await fetch(`http://localhost:8000/initiate-upload/`, {\n      method: 'POST',\n      body: formdata\n    }).then(res => {\n      res.json();\n    }).then(data => {\n      uploadId = data.upload_id;\n    });\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n      const chunkSize = 100 * 1024 * 1024; // 5 MB\n      const fileSize = file.size;\n      const chunks = Math.ceil(fileSize / chunkSize);\n      let offset = 0;\n      for (let j = 0; j < chunks; j++) {\n        const chunk = file.slice(offset, offset + chunkSize);\n        const chunkNumber = j;\n        const uploadChunkFormData = new FormData();\n        uploadChunkFormData.append('filename', filename);\n        uploadChunkFormData.append('chunk_number', chunkNumber);\n        uploadChunkFormData.append('chunk', new Blob([chunk]));\n        uploadChunkFormData.append('upload_id', uploadId);\n\n        // const boundary = formdata.getBoundary()\n        const response = await fetch('http://localhost:8000/upload-chunk', {\n          method: 'POST',\n          body: uploadChunkFormData,\n          headers: {\n            'Content-Type': `multipart/form-data`\n          }\n        });\n        const data = await response.json();\n        console.log(data);\n        offset += chunkSize;\n      }\n    }\n    const response2 = await fetch('http://localhost:8000/complete-upload', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      body: JSON.stringify({\n        filename: filename,\n        upload_id: uploadId\n      })\n    });\n    const data2 = await response2.json();\n    console.log(data2);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        multiple: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: uploadFile,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","uploadFile","fileInput","document","querySelector","files","filename","name","formdata","FormData","append","uploadId","fetch","method","body","then","res","json","data","upload_id","i","length","file","chunkSize","fileSize","size","chunks","Math","ceil","offset","j","chunk","slice","chunkNumber","uploadChunkFormData","Blob","response","headers","console","log","response2","JSON","stringify","data2","children","encType","type","multiple","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/azatamanzol/PycharmProjects/uchet/frontend/src/App.js"],"sourcesContent":["import React, {useState, useRef, useEffect} from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  async function uploadFile() {\n    const fileInput = document.querySelector('input[type=\"file\"]');\n    const files = fileInput.files;\n    const filename = files[0].name;\n\n    const formdata = new FormData()\n    formdata.append('filename', filename)\n\n    let uploadId\n    await fetch(`http://localhost:8000/initiate-upload/`,{\n      method: 'POST',\n      body: formdata\n    }).then(res => {\n      res.json()\n    }).then(data => {\n      uploadId = data.upload_id\n    });\n\n\n\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n      const chunkSize = 100 * 1024 * 1024; // 5 MB\n      const fileSize = file.size;\n      const chunks = Math.ceil(fileSize / chunkSize);\n      let offset = 0;\n      for (let j = 0; j < chunks; j++) {\n        const chunk = file.slice(offset, offset + chunkSize);\n        const chunkNumber = j;\n        const uploadChunkFormData = new FormData();\n\n        uploadChunkFormData.append('filename', filename);\n        uploadChunkFormData.append('chunk_number', chunkNumber);\n        uploadChunkFormData.append('chunk', new Blob([chunk]));\n        uploadChunkFormData.append('upload_id', uploadId);\n\n\n        // const boundary = formdata.getBoundary()\n        const response = await fetch('http://localhost:8000/upload-chunk', {\n          method: 'POST',\n          body: uploadChunkFormData,\n          headers: {\n            'Content-Type': `multipart/form-data`\n          }\n        });\n        const data = await response.json();\n        console.log(data);\n        offset += chunkSize;\n      }\n    }\n\n    const response2 = await fetch('http://localhost:8000/complete-upload', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      body: JSON.stringify({filename: filename, upload_id: uploadId})\n    });\n    const data2 = await response2.json();\n    console.log(data2);\n  }\n\n\n  return (\n      <>\n        <form encType=\"multipart/form-data\">\n        <input type=\"file\" name=\"file\" multiple/>\n          <button type=\"button\" onClick={uploadFile}>Upload</button>\n      </form>\n      </>\n  )\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAO,OAAO;AACxD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EACb,eAAeC,UAAUA,CAAA,EAAG;IAC1B,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,oBAAoB,CAAC;IAC9D,MAAMC,KAAK,GAAGH,SAAS,CAACG,KAAK;IAC7B,MAAMC,QAAQ,GAAGD,KAAK,CAAC,CAAC,CAAC,CAACE,IAAI;IAE9B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEJ,QAAQ,CAAC;IAErC,IAAIK,QAAQ;IACZ,MAAMC,KAAK,CAAE,wCAAuC,EAAC;MACnDC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEN;IACR,CAAC,CAAC,CAACO,IAAI,CAACC,GAAG,IAAI;MACbA,GAAG,CAACC,IAAI,EAAE;IACZ,CAAC,CAAC,CAACF,IAAI,CAACG,IAAI,IAAI;MACdP,QAAQ,GAAGO,IAAI,CAACC,SAAS;IAC3B,CAAC,CAAC;IAIF,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGf,KAAK,CAACgB,MAAM,EAAED,CAAC,EAAE,EAAE;MACrC,MAAME,IAAI,GAAGjB,KAAK,CAACe,CAAC,CAAC;MACrB,MAAMG,SAAS,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC;MACrC,MAAMC,QAAQ,GAAGF,IAAI,CAACG,IAAI;MAC1B,MAAMC,MAAM,GAAGC,IAAI,CAACC,IAAI,CAACJ,QAAQ,GAAGD,SAAS,CAAC;MAC9C,IAAIM,MAAM,GAAG,CAAC;MACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,MAAM,EAAEI,CAAC,EAAE,EAAE;QAC/B,MAAMC,KAAK,GAAGT,IAAI,CAACU,KAAK,CAACH,MAAM,EAAEA,MAAM,GAAGN,SAAS,CAAC;QACpD,MAAMU,WAAW,GAAGH,CAAC;QACrB,MAAMI,mBAAmB,GAAG,IAAIzB,QAAQ,EAAE;QAE1CyB,mBAAmB,CAACxB,MAAM,CAAC,UAAU,EAAEJ,QAAQ,CAAC;QAChD4B,mBAAmB,CAACxB,MAAM,CAAC,cAAc,EAAEuB,WAAW,CAAC;QACvDC,mBAAmB,CAACxB,MAAM,CAAC,OAAO,EAAE,IAAIyB,IAAI,CAAC,CAACJ,KAAK,CAAC,CAAC,CAAC;QACtDG,mBAAmB,CAACxB,MAAM,CAAC,WAAW,EAAEC,QAAQ,CAAC;;QAGjD;QACA,MAAMyB,QAAQ,GAAG,MAAMxB,KAAK,CAAC,oCAAoC,EAAE;UACjEC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEoB,mBAAmB;UACzBG,OAAO,EAAE;YACP,cAAc,EAAG;UACnB;QACF,CAAC,CAAC;QACF,MAAMnB,IAAI,GAAG,MAAMkB,QAAQ,CAACnB,IAAI,EAAE;QAClCqB,OAAO,CAACC,GAAG,CAACrB,IAAI,CAAC;QACjBW,MAAM,IAAIN,SAAS;MACrB;IACF;IAEA,MAAMiB,SAAS,GAAG,MAAM5B,KAAK,CAAC,uCAAuC,EAAE;MACrEC,MAAM,EAAE,MAAM;MACdwB,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDvB,IAAI,EAAE2B,IAAI,CAACC,SAAS,CAAC;QAACpC,QAAQ,EAAEA,QAAQ;QAAEa,SAAS,EAAER;MAAQ,CAAC;IAChE,CAAC,CAAC;IACF,MAAMgC,KAAK,GAAG,MAAMH,SAAS,CAACvB,IAAI,EAAE;IACpCqB,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;EACpB;EAGA,oBACI9C,OAAA,CAAAE,SAAA;IAAA6C,QAAA,eACE/C,OAAA;MAAMgD,OAAO,EAAC,qBAAqB;MAAAD,QAAA,gBACnC/C,OAAA;QAAOiD,IAAI,EAAC,MAAM;QAACvC,IAAI,EAAC,MAAM;QAACwC,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eACvCtD,OAAA;QAAQiD,IAAI,EAAC,QAAQ;QAACM,OAAO,EAAEnD,UAAW;QAAA2C,QAAA,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACvD,iBACJ;AAET;AAACE,EAAA,GAxEQrD,GAAG;AA0EZ,eAAeA,GAAG;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}