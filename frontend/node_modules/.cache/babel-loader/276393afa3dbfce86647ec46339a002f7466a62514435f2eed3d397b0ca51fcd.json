{"ast":null,"code":"var _jsxFileName = \"/Users/azatamanzol/PycharmProjects/uchet/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const chunkSize = 5 * 1024 * 1024; // 5 MB\n    const chunks = [];\n    const reader = new FileReader();\n    reader.onload = async event => {\n      const arrayBuffer = event.target.result;\n      const totalSize = arrayBuffer.byteLength;\n      let start = 0;\n      while (start < totalSize) {\n        const end = Math.min(start + chunkSize, totalSize);\n        const chunk = arrayBuffer.slice(start, end);\n        chunks.push(chunk);\n        start = end;\n      }\n      const formData = new FormData();\n      formData.append('filename', file.name);\n      formData.append('num_chunks', chunks.length);\n      await axios.post('http://0.0.0.0:8000/initiate-upload', formData);\n      const promises = [];\n      for (let i = 0; i < chunks.length; i++) {\n        const chunkFormData = new FormData();\n        chunkFormData.append('filename', file.name);\n        chunkFormData.append('chunk_number', i);\n        chunkFormData.append('chunk', chunks[i]);\n        promises.push(axios.post('http://0.0.0.0:8000/upload-chunk', chunkFormData));\n      }\n      await Promise.all(promises);\n      const completeFormData = new FormData();\n      completeFormData.append('filename', file.name);\n      await axios.post('http://0.0.0.0:8000/complete-upload', completeFormData);\n    };\n    reader.readAsArrayBuffer(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","file","setFile","handleFileChange","event","target","files","handleSubmit","preventDefault","chunkSize","chunks","reader","FileReader","onload","arrayBuffer","result","totalSize","byteLength","start","end","Math","min","chunk","slice","push","formData","FormData","append","name","length","post","promises","i","chunkFormData","Promise","all","completeFormData","readAsArrayBuffer","onSubmit","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/azatamanzol/PycharmProjects/uchet/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [file, setFile] = useState(null);\n\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const chunkSize = 5 * 1024 * 1024; // 5 MB\n    const chunks = [];\n    const reader = new FileReader();\n    reader.onload = async (event) => {\n      const arrayBuffer = event.target.result;\n      const totalSize = arrayBuffer.byteLength;\n      let start = 0;\n      while (start < totalSize) {\n        const end = Math.min(start + chunkSize, totalSize);\n        const chunk = arrayBuffer.slice(start, end);\n        chunks.push(chunk);\n        start = end;\n      }\n      const formData = new FormData();\n      formData.append('filename', file.name);\n      formData.append('num_chunks', chunks.length);\n      await axios.post('http://0.0.0.0:8000/initiate-upload', formData);\n      const promises = [];\n      for (let i = 0; i < chunks.length; i++) {\n        const chunkFormData = new FormData();\n        chunkFormData.append('filename', file.name);\n        chunkFormData.append('chunk_number', i);\n        chunkFormData.append('chunk', chunks[i]);\n        promises.push(axios.post('http://0.0.0.0:8000/upload-chunk', chunkFormData));\n      }\n      await Promise.all(promises);\n      const completeFormData = new FormData();\n      completeFormData.append('filename', file.name);\n      await axios.post('http://0.0.0.0:8000/complete-upload', completeFormData);\n    }\n    reader.readAsArrayBuffer(file);\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"file\" onChange={handleFileChange} />\n      <button type=\"submit\">Upload</button>\n    </form>\n  )\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}