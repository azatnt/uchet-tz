{"ast":null,"code":"var _jsxFileName = \"/Users/azatamanzol/PycharmProjects/uchet/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const initiateUpload = async () => {\n    const formData = new FormData();\n    formData.append('filename', file.name);\n    await axios.post('http://0.0.0.0:8000/initiate-upload', formData);\n  };\n  const uploadChunk = async (chunkNumber, chunk) => {\n    const formData = new FormData();\n    formData.append('filename', file.name);\n    formData.append('chunk_number', chunkNumber);\n    formData.append('chunk', chunk);\n    await axios.post('http://0.0.0.0:8000/upload-chunk', formData);\n  };\n  const completeUpload = async () => {\n    const formData = new FormData();\n    formData.append('filename', file.name);\n    await axios.post('http://0.0.0.0:8000/complete-upload', formData);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const chunkSize = 5 * 1024 * 1024; // 5 MB\n    const chunks = [];\n    const reader = new FileReader();\n    reader.onload = async event => {\n      const arrayBuffer = event.target.result;\n      const totalSize = arrayBuffer.byteLength;\n      let start = 0;\n      while (start < totalSize) {\n        const end = Math.min(start + chunkSize, totalSize);\n        const chunk = arrayBuffer.slice(start, end);\n        chunks.push(chunk);\n        start = end;\n      }\n      await initiateUpload();\n      const promises = [];\n      for (let i = 0; i < chunks.length; i++) {\n        promises.push(uploadChunk(i, chunks[i]));\n      }\n      await Promise.all(promises);\n      await completeUpload();\n    };\n    reader.readAsArrayBuffer(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","file","setFile","handleFileChange","event","target","files","initiateUpload","formData","FormData","append","name","post","uploadChunk","chunkNumber","chunk","completeUpload","handleSubmit","preventDefault","chunkSize","chunks","reader","FileReader","onload","arrayBuffer","result","totalSize","byteLength","start","end","Math","min","slice","push","promises","i","length","Promise","all","readAsArrayBuffer","onSubmit","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/azatamanzol/PycharmProjects/uchet/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [file, setFile] = useState(null);\n\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  const initiateUpload = async () => {\n    const formData = new FormData();\n    formData.append('filename', file.name);\n    await axios.post('http://0.0.0.0:8000/initiate-upload', formData);\n  };\n\n  const uploadChunk = async (chunkNumber, chunk) => {\n    const formData = new FormData();\n    formData.append('filename', file.name);\n    formData.append('chunk_number', chunkNumber);\n    formData.append('chunk', chunk);\n    await axios.post('http://0.0.0.0:8000/upload-chunk', formData);\n  };\n\n  const completeUpload = async () => {\n    const formData = new FormData();\n    formData.append('filename', file.name);\n    await axios.post('http://0.0.0.0:8000/complete-upload', formData);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const chunkSize = 5 * 1024 * 1024; // 5 MB\n    const chunks = [];\n    const reader = new FileReader();\n    reader.onload = async (event) => {\n      const arrayBuffer = event.target.result;\n      const totalSize = arrayBuffer.byteLength;\n      let start = 0;\n      while (start < totalSize) {\n        const end = Math.min(start + chunkSize, totalSize);\n        const chunk = arrayBuffer.slice(start, end);\n        chunks.push(chunk);\n        start = end;\n      }\n      await initiateUpload();\n      const promises = [];\n      for (let i = 0; i < chunks.length; i++) {\n        promises.push(uploadChunk(i, chunks[i]));\n      }\n      await Promise.all(promises);\n      await completeUpload();\n    };\n    reader.readAsArrayBuffer(file);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"file\" onChange={handleFileChange} />\n      <button type=\"submit\">Upload</button>\n    </form>\n  )\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}